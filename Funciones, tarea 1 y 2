Tarea 1

--Cuál es el promedio, en formato human-readable, de tiempo entre cada pago por cliente de la BD Sakila?

with 
time_payment as (
	select p.payment_date as fecha, p.payment_id as clave 
	from payment p where p.payment_id > 1
),
per_client_pay as(
	select sum(age(time_payment.fecha, pa.payment_date)) as tiempo, pa.customer_id as clave_pay, count(pa.payment_id) as suma 
	from payment pa join time_payment on (pa.payment_id = time_payment.clave-1)
	where age(time_payment.fecha, pa.payment_date) > '00:00'::interval
	group by pa.customer_id 
)
select concat(c.first_name, ' ', c.last_name) as nombre, pay.customer_id as id_cliente, 
(per_client_pay.tiempo/per_client_pay.suma) as dias_promedio_de_pagos
from payment pay join per_client_pay on (pay.customer_id = per_client_pay.clave_pay)
join customer c using (customer_id)
group by pay.customer_id,(per_client_pay.tiempo/per_client_pay.suma),concat(c.first_name, ' ', c.last_name);
	
--Sigue una distribución normal?

with 
time_payment as (
	select p.payment_date as fecha, p.payment_id as clave 
	from payment p where p.payment_id > 1
),
per_client_pay as(
	select sum(age(time_payment.fecha, pa.payment_date)) as tiempo, pa.customer_id as clave_pay, count(pa.payment_id) as suma 
	from payment pa join time_payment on (pa.payment_id = time_payment.clave-1)
	where age(time_payment.fecha, pa.payment_date) > '00:00'::interval
	group by pa.customer_id 
),
tabla as(
	select concat(c.first_name, ' ', c.last_name) as nombre, pay.customer_id as id_cliente, 
	(per_client_pay.tiempo/per_client_pay.suma) as dias_promedio_de_pagos
	from payment pay join per_client_pay on (pay.customer_id = per_client_pay.clave_pay)
	join customer c using (customer_id) group by pay.customer_id,(per_client_pay.tiempo/per_client_pay.suma),
	concat(c.first_name, ' ', c.last_name)
),
varianza as(
select c2.customer_id, extract('epoch' from ta.dias_promedio_de_pagos) / 86400 as num_dias
from customer c2 join tabla ta on(ta.id_cliente = c2.customer_id)
group by c2.customer_id, ta.dias_promedio_de_pagos
)
select variance(va.num_dias) as varianza, sqrt(variance(va.num_dias)) as desviacion_estandar from varianza va;

--Como podemos ver, la varianza es 9.622 dias a 3 decimales
--Y la desviacion esntandar es 3.102 dias a 3 decimales
--Con esto podemos ver si sigue una distribucion normal

select count(c.customer_id) from customer c 

--Hay 599 clientes en total

select segmentos.segmento, count(*) num_dias, (count(*) / 599::float)*100 porcentaje
from
  (with time_payment as (
	select p.payment_date as fecha, p.payment_id as clave 
	from payment p where p.payment_id > 1),
  per_client_pay as(
	select sum(age(time_payment.fecha, pa.payment_date)) as tiempo, pa.customer_id as clave_pay, count(pa.payment_id) as suma 
	from payment pa join time_payment on (pa.payment_id = time_payment.clave-1)
	where age(time_payment.fecha, pa.payment_date) > '00:00'::interval
	group by pa.customer_id ),
  tabla as(
	select concat(c.first_name, ' ', c.last_name) as nombre, pay.customer_id as id_cliente, 
	(per_client_pay.tiempo/per_client_pay.suma) as dias_promedio_de_pagos
	from payment pay join per_client_pay on (pay.customer_id = per_client_pay.clave_pay)
	join customer c using (customer_id) group by pay.customer_id,(per_client_pay.tiempo/per_client_pay.suma),
	concat(c.first_name, ' ', c.last_name))
select c2.customer_id, extract('epoch' from ta.dias_promedio_de_pagos) / 86400 as num_dias
from customer c2 join tabla ta on(ta.id_cliente = c2.customer_id)
group by c2.customer_id, ta.dias_promedio_de_pagos
  )
as time_payments join 
  (select '0-3.417' segmento, 0 limite_inferior, 3.417 limite_superior
  union all
  select '3.418-6.519' segmento, 3.418 limite_inferior, 6.519 limite_superior
  union all
  select '6.52-9.619' segmento, 6.52 limite_inferior, 9.6219 limite_superior
  union all
  select '9.622-12.7239' segmento, 9.622 limite_inferior, 12.7239 limite_superior
  union all
  select '12.724-15.8259' segmento, 12.724 limite_inferior, 15.8259 limite_superior
  union all
  select '15.826-9999999.99' segmento, 15.826 limite_inferior, 9999999.99 limite_superior)
as segmentos
on (time_payments.num_dias between segmentos.limite_inferior and segmentos.limite_superior)
group by segmentos.segmento order by num_dias;

--Como podemos ver, los datos no siguen una distribucion normal


--Qué tanto difiere ese promedio del tiempo entre rentas por cliente?

with 
time_payment as (
	select p.payment_date as fecha, p.payment_id as clave 
	from payment p where p.payment_id > 1
),
per_client_pay as(
	select sum(age(time_payment.fecha, pa.payment_date)) as tiempo, pa.customer_id as clave_pay, count(pa.payment_id) as suma 
	from payment pa join time_payment on (pa.payment_id = time_payment.clave-1)
	where age(time_payment.fecha, pa.payment_date) > '00:00'::interval
	group by pa.customer_id 
),
time_rental as (
	select r.rental_date as fecha, r.rental_id as clave
	from rental r where r.rental_id > 1
),
per_client_rent as(
	select sum(age(time_rental.fecha, re.rental_date)) as tiempo, re.customer_id as clave_rent, count(re.rental_id) as suma 
	from rental re join time_rental on (re.rental_id = time_rental.clave-1)
	where age(time_rental.fecha, re.rental_date) > '00:00'::interval
	group by re.customer_id
) 
select concat(c.first_name, ' ', c.last_name) as nombre, pay.customer_id as id_cliente, 
(per_client_pay.tiempo/per_client_pay.suma) as dias_promedio_de_pagos, 
(per_client_rent.tiempo/per_client_rent.suma) as dias_promedio_de_renta,
((per_client_pay.tiempo/per_client_pay.suma) - (per_client_rent.tiempo/per_client_rent.suma)) as diferencia
from payment pay join per_client_pay on (pay.customer_id = per_client_pay.clave_pay)
join rental ren using (customer_id)
join per_client_rent on (ren.customer_id = per_client_rent.clave_rent)
join customer c using (customer_id)
group by pay.customer_id,(per_client_pay.tiempo/per_client_pay.suma),(per_client_rent.tiempo/per_client_rent.suma),
((per_client_pay.tiempo/per_client_pay.suma) - (per_client_rent.tiempo/per_client_rent.suma)),concat(c.first_name, ' ', c.last_name);

--Tarea 2

--Parte de la infraestructura es diseñar contenedores cilíndricos giratorios para facilitar la colocación 
--y extracción de discos por brazos automatizados. Cada cajita de Blu-Ray mide 20cm x 13.5cm x 1.5cm, y 
--para que el brazo pueda manipular adecuadamente cada cajita, debe estar contenida dentro de un arnés que 
--cambia las medidas a 30cm x 21cm x 8cm para un espacio total de 5040 centímetros cúbicos y un peso de 500 
--gr por película.

--Se nos ha encargado formular la medida de dichos cilindros de manera tal que quepan todas las copias de los 
--Blu-Rays de cada uno de nuestros stores. Las medidas deben ser estándar, es decir, la misma para todas nuestras 
--stores, y en cada store pueden ser instalados más de 1 de estos cilindros. Cada cilindro aguanta un peso máximo 
--de 50kg como máximo. El volúmen de un cilindro se calcula de [ésta forma.](volume of a cylinder)

--Solo puede haber 50 kg por cilindro, por lo que solo puede haber 100 Blu-Rays por cilindro
--Ahora necesitamos sacar cuantos Blu-rays hay por tienda

select s.store_id, count(f.film_id) from store s 
join inventory i using (store_id) 
join film f using (film_id)
group by s.store_id;

--Para la tienda 1 se necesitan 22.7 cilindros, osea 23:
--(0.5 kg por Blu-ray * 2270 Blu-ray en la tienda 1 = 
--1135 kg en total / 50 kg por cilindro = 22.7 cilindros para la tienda 1)

--Para la tienda 2 se necesitan 23.11 cilindros, osea 24:
--(0.5 kg por Blu-rays * 2311 Blu-rays en la tienda 2 = 
--1155.5 kg en total / 50 kg por cilindro = 23.11 cilindros para la tienda 2)

select s.store_id, count(f.film_id) as Blue_Rays_Totales, 
count(f.film_id)*0.5 as Kilos_Totales,
ceil(count(f.film_id)*0.5/50) as Cilindros
from store s join inventory i using (store_id) 
join film f using (film_id)
group by s.store_id;

--Asumiendo que cada cilindro tendra la ocupacion maxima excepto el ultimo, cada cilidnro debera tener la capacidad 
--de tener100 Blu-rays de medidas de 30cm x 21cm x 8cm para un espacio  de 5040 centímetros cúbicos por blu-rays. 
--Cada cilindro debe de tener espacio minimo de 504000 centrimetros cubicos de espacio. Como la formula de el volumen 
--de un cilindro es = pi*radio^2*altura. Como un Blu-Ray es rectangular, tomamos como su "radio" la distancia de esquina 
--a esquina opuesta / 2, ((30^2+21^2)^(1/2)/2 = 18.31 de radio) y la altura es 8 cm * 100 Blu-Rays = 800 cm. Eso nos da 
--un volumen de pi*(18.31^2)*800 = 842590 centimetros cubicos. Por lo que las medidas de los cilindros, si lo fueramos 
--a acomodar de manera vertical deberan ser minimo 8 m de altura y radio de 18.31 cm, aunque probablemente deberan 
--ser un poco mas grande para asegurar que quepan. El espacio extra que queda, se debe a que estamos metiendo cajas 
--rectangulares dentro de un cilindro, por lo que en los lados queda aun espacio.

--Otra forma viable para hacerlo seria separar los 100 Blu-Rays en 4 partes iguales, cada una de 25 Blu-Rays 
--respectivamente. Ya que si lo dividiermos entre 2, 5 o 10 habira mucho espacio sin utilizar ya que lo que 
--estamos intentando es poner un rectangulo de Blu-Rays en el centro de el cilindro

--Para 4 partes de 25 Blu-Rays, la altura seria 8 cm * 25 Blu-Rays = 200 cm, mientras que el radio ahora seria 
--((60^2+42^2))^(1/2)/2 = 36.62 cm. Eso nos da un volumen de pi*(36.62^2)*200 = 828,842 centimetros cubicos.
--Por lo que las medidas de los cilindros, si lo fueramos a acomodar de 2 m de altura y radio de 36.62 cm, 
--aunque probablemente deberan ser un poco mas grande para asegurar que quepan. Esta forma se ahorra un poco mas de 
--espacio comparado con todos puestos de manera vertical.
